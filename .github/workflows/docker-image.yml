name: Docker Image CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/hellodocker:latest .

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/hellodocker:latest

      - name: Get GitHub runner IP
        id: ip
        uses: haythem/public-ip@v1.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Add runner IP to EC2 security group
        run: |
                aws ec2 authorize-security-group-ingress \
                  --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} \
                  --protocol tcp --port 22 \
                  --cidr ${{ steps.ip.outputs.ipv4 }}/32

            - name: Set up SSH key
              run: |
                mkdir -p ~/.ssh
                echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
            - name: SSH and deploy Docker container
              run: |
                ssh -i ~/.ssh/id_rsa ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
                  echo "Stopping container..."
                  sudo docker stop hd || true
                
                  echo "Removing container..."
                  sudo docker rm hd || true
                
                  echo "Removing image..."
                  sudo docker rmi tostos/hellodocker:latest || true
                
                  echo "Running new container..."
                  sudo docker run -d --name hd -p 80:8080 tostos/hellodocker
                EOF

            - name: Remove runner IP from EC2 security group
              if: always()
              run: |
                aws ec2 revoke-security-group-ingress \
                  --group-id ${{ secrets.EC2_SECURITY_GROUP_ID }} \
                  --protocol tcp --port 22 \
                  --cidr ${{ steps.ip.outputs.ipv4 }}/32